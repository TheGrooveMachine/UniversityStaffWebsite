{"ast":null,"code":"var _jsxFileName = \"/Users/erich/Documents/GitHub/reactProject/src/components/ScrollButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaArrowCircleUp } from 'react-icons/fa';\nimport { Button } from './Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollButton = () => {\n  _s();\n  const [visible, setVisible] = useState(false);\n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop;\n    if (scrolled > 300) {\n      setVisible(true);\n    } else if (scrolled <= 300) {\n      setVisible(false);\n    }\n  };\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n\n  window.addEventListener('scroll', toggleVisible);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: visible ? 'inline' : 'none'\n      },\n      onClick: scrollToTop,\n      className: \"scrollButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollButton, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n_c = ScrollButton;\nexport default ScrollButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollButton\");","map":{"version":3,"names":["React","useState","FaArrowCircleUp","Button","ScrollButton","visible","setVisible","toggleVisible","scrolled","document","documentElement","scrollTop","scrollToTop","window","scrollTo","top","behavior","addEventListener","display"],"sources":["/Users/erich/Documents/GitHub/reactProject/src/components/ScrollButton.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {FaArrowCircleUp} from 'react-icons/fa';\nimport { Button } from './Styles';\n  \nconst ScrollButton = () =>{\n  \n  const [visible, setVisible] = useState(false)\n  \n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop;\n    if (scrolled > 300){\n      setVisible(true)\n    } \n    else if (scrolled <= 300){\n      setVisible(false)\n    }\n  };\n  \n  const scrollToTop = () =>{\n    window.scrollTo({\n      top: 0, \n      behavior: 'smooth'\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n  \n  window.addEventListener('scroll', toggleVisible);\n  \n  return (\n    <Button>\n        <div style={{display: visible ? 'inline' : 'none'}} onClick={scrollToTop} className='scrollButton'></div>\n     {/* <FaArrowCircleUp onClick={scrollToTop} \n     style={{display: visible ? 'inline' : 'none'}} /> */}\n    </Button>\n  );\n}\n  \nexport default ScrollButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,eAAe,QAAO,gBAAgB;AAC9C,SAASC,MAAM,QAAQ,UAAU;AAAC;AAElC,MAAMC,YAAY,GAAG,MAAK;EAAA;EAExB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMM,aAAa,GAAG,MAAM;IAC1B,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS;IACnD,IAAIH,QAAQ,GAAG,GAAG,EAAC;MACjBF,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MACI,IAAIE,QAAQ,IAAI,GAAG,EAAC;MACvBF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMM,WAAW,GAAG,MAAK;IACvBC,MAAM,CAACC,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;MACV;AACN;IACI,CAAC,CAAC;EACJ,CAAC;;EAEDH,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAEV,aAAa,CAAC;EAEhD,oBACE,QAAC,MAAM;IAAA,uBACH;MAAK,KAAK,EAAE;QAACW,OAAO,EAAEb,OAAO,GAAG,QAAQ,GAAG;MAAM,CAAE;MAAC,OAAO,EAAEO,WAAY;MAAC,SAAS,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QAGpG;AAEb,CAAC;AAAA,GAhCKR,YAAY;AAAA,KAAZA,YAAY;AAkClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
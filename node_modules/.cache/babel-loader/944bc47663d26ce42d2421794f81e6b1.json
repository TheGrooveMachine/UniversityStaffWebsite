{"ast":null,"code":"var _jsxFileName = \"/Users/erich/Documents/GitHub/reactProject/src/components/CoursesGrid.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport getData from '../util/getData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CoopGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employment: {},\n      loaded: false\n    };\n  }\n  render() {\n    const {\n      employment,\n      loaded\n    } = this.state;\n    // const columns = [\n    //   { field: 'id', headerName: 'ID', width: 100 },\n    //   {\n    //     field: 'employer',\n    //     headerName: 'Employer',\n    //     width: 150,\n    //     editable: true,\n    //   },\n    //   {\n    //     field: 'degree',\n    //     headerName: 'Degree',\n    //     width: 150,\n    //     editable: true,\n    //   },\n    //   {\n    //     field: 'city',\n    //     headerName: 'City',\n    //     type: 'number',\n    //     width: 110,\n    //     editable: true,\n    //   },\n    //   {\n    //     field: 'term',\n    //     headerName: 'Term',\n    //     description: 'This column has a value getter and is not sortable.',\n    //     sortable: false,\n    //     width: 160,\n    //     valueGetter: (params) =>\n    //       `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n    //   },\n    // ];\n\n    // const rows = [\n    //   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n    //   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    //   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    //   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    //   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    //   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    //   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    //   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    //   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n    // ];\n    console.log(employment.coopTable);\n    //   const row = employment.coopTable.coopInformation.map(({ employer, degree, city, term }, index) => {\n\n    //     return {\n    //           id: index,\n    //           employer,\n    //           degree,\n    //           city,\n    //           term\n    //         }       \n\n    // });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"gridBox\",\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5],\n          checkboxSelection: true,\n          disableSelectionOnClick: true,\n          experimentalFeatures: {\n            newEditingApi: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this);\n  }\n  componentDidMount() {\n    getData('employment/').then(json => {\n      this.setState({\n        employment: json,\n        loaded: true,\n        danTest: 5\n      });\n    });\n  }\n}","map":{"version":3,"names":["React","Box","DataGrid","getData","CoopGrid","Component","constructor","props","state","employment","loaded","render","console","log","coopTable","rows","columns","newEditingApi","componentDidMount","then","json","setState","danTest"],"sources":["/Users/erich/Documents/GitHub/reactProject/src/components/CoursesGrid.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport getData from '../util/getData';\n\n\nexport default class CoopGrid extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        employment:{},\n        loaded:false\n    }\n  } \n\n  render(){\n\n        const {employment, loaded, } = this.state;    \n        // const columns = [\n        //   { field: 'id', headerName: 'ID', width: 100 },\n        //   {\n        //     field: 'employer',\n        //     headerName: 'Employer',\n        //     width: 150,\n        //     editable: true,\n        //   },\n        //   {\n        //     field: 'degree',\n        //     headerName: 'Degree',\n        //     width: 150,\n        //     editable: true,\n        //   },\n        //   {\n        //     field: 'city',\n        //     headerName: 'City',\n        //     type: 'number',\n        //     width: 110,\n        //     editable: true,\n        //   },\n        //   {\n        //     field: 'term',\n        //     headerName: 'Term',\n        //     description: 'This column has a value getter and is not sortable.',\n        //     sortable: false,\n        //     width: 160,\n        //     valueGetter: (params) =>\n        //       `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n        //   },\n        // ];\n\n        // const rows = [\n        //   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n        //   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n        //   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n        //   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n        //   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n        //   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n        //   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n        //   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n        //   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n        // ];\n        console.log(employment.coopTable);\n      //   const row = employment.coopTable.coopInformation.map(({ employer, degree, city, term }, index) => {\n\n      //     return {\n      //           id: index,\n      //           employer,\n      //           degree,\n      //           city,\n      //           term\n      //         }       \n\n      // });\n\n        return (\n          <div>\n              <Box className='gridBox'>\n                <DataGrid\n                  rows={rows}\n                  columns={columns}\n                  pageSize={5}\n                  rowsPerPageOptions={[5]}\n                  checkboxSelection\n                  disableSelectionOnClick\n                  experimentalFeatures={{ newEditingApi: true }}\n                />\n              </Box>\n          </div>\n        )\n      }\n\n  componentDidMount(){\n    getData('employment/')\n        .then((json) => {\n            this.setState({\n                employment:json,\n                loaded:true,\n                danTest:5\n        });\n    });\n  }\n}\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,OAAO,MAAM,iBAAiB;AAAC;AAGtC,eAAe,MAAMC,QAAQ,SAASJ,KAAK,CAACK,SAAS;EAEnDC,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,UAAU,EAAC,CAAC,CAAC;MACbC,MAAM,EAAC;IACX,CAAC;EACH;EAEAC,MAAM,GAAE;IAEF,MAAM;MAACF,UAAU;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;IACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAI,OAAO,CAACC,GAAG,CAACJ,UAAU,CAACK,SAAS,CAAC;IACnC;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEE,oBACE;MAAA,uBACI,QAAC,GAAG;QAAC,SAAS,EAAC,SAAS;QAAA,uBACtB,QAAC,QAAQ;UACP,IAAI,EAAEC,IAAK;UACX,OAAO,EAAEC,OAAQ;UACjB,QAAQ,EAAE,CAAE;UACZ,kBAAkB,EAAE,CAAC,CAAC,CAAE;UACxB,iBAAiB;UACjB,uBAAuB;UACvB,oBAAoB,EAAE;YAAEC,aAAa,EAAE;UAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAC9C;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACJ;EAEV;EAEJC,iBAAiB,GAAE;IACjBf,OAAO,CAAC,aAAa,CAAC,CACjBgB,IAAI,CAAEC,IAAI,IAAK;MACZ,IAAI,CAACC,QAAQ,CAAC;QACVZ,UAAU,EAACW,IAAI;QACfV,MAAM,EAAC,IAAI;QACXY,OAAO,EAAC;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}
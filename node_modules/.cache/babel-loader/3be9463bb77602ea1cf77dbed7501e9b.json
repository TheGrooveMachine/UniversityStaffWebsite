{"ast":null,"code":"var _jsxFileName = \"/Users/erich/Documents/GitHub/reactProject/src/components/CoursesGrid.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Courses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: {},\n      loaded: false\n    };\n  }\n  render() {\n    const columns = [{\n      field: 'id',\n      headerName: 'ID',\n      width: 100\n    }, {\n      field: 'firstName',\n      headerName: 'First name',\n      width: 150,\n      editable: true\n    }, {\n      field: 'lastName',\n      headerName: 'Last name',\n      width: 150,\n      editable: true\n    }, {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 110,\n      editable: true\n    }, {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: params => `${params.row.firstName || ''} ${params.row.lastName || ''}`\n    }];\n    const rows = [{\n      id: 1,\n      lastName: 'Snow',\n      firstName: 'Jon',\n      age: 35\n    }, {\n      id: 2,\n      lastName: 'Lannister',\n      firstName: 'Cersei',\n      age: 42\n    }, {\n      id: 3,\n      lastName: 'Lannister',\n      firstName: 'Jaime',\n      age: 45\n    }, {\n      id: 4,\n      lastName: 'Stark',\n      firstName: 'Arya',\n      age: 16\n    }, {\n      id: 5,\n      lastName: 'Targaryen',\n      firstName: 'Daenerys',\n      age: null\n    }, {\n      id: 6,\n      lastName: 'Melisandre',\n      firstName: null,\n      age: 150\n    }, {\n      id: 7,\n      lastName: 'Clifford',\n      firstName: 'Ferrara',\n      age: 44\n    }, {\n      id: 8,\n      lastName: 'Frances',\n      firstName: 'Rossini',\n      age: 36\n    }, {\n      id: 9,\n      lastName: 'Roxie',\n      firstName: 'Harvey',\n      age: 65\n    }];\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"gridBox\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        rowsPerPageOptions: [5],\n        checkboxSelection: true,\n        disableSelectionOnClick: true,\n        experimentalFeatures: {\n          newEditingApi: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n  }\n  componentDidMount() {\n    getData('courses/').then(json => {\n      this.setState({\n        courses: json,\n        loaded: true,\n        danTest: 5\n      });\n    });\n  }\n}","map":{"version":3,"names":["React","Box","DataGrid","Courses","Component","constructor","props","state","courses","loaded","render","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","row","firstName","lastName","rows","id","age","newEditingApi","componentDidMount","getData","then","json","setState","danTest"],"sources":["/Users/erich/Documents/GitHub/reactProject/src/components/CoursesGrid.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\n\n\nexport default class Courses extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n        courses:{},\n        loaded:false\n    }\n  } \n\nrender() {\n  const columns = [\n    { field: 'id', headerName: 'ID', width: 100 },\n    {\n      field: 'firstName',\n      headerName: 'First name',\n      width: 150,\n      editable: true,\n    },\n    {\n      field: 'lastName',\n      headerName: 'Last name',\n      width: 150,\n      editable: true,\n    },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 110,\n      editable: true,\n    },\n    {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.firstName || ''} ${params.row.lastName || ''}`,\n    },\n  ];\n\n  const rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n\n  return (\n    \n    <Box className='gridBox'>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n        experimentalFeatures={{ newEditingApi: true }}\n      />\n    </Box>\n  );\n\n}\ncomponentDidMount(){\n  getData('courses/')\n      .then((json) => {\n          this.setState({\n              courses:json,\n              loaded:true,\n              danTest:5\n      });\n  });\n}\n  \n}\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAG5C,eAAe,MAAMC,OAAO,SAASH,KAAK,CAACI,SAAS;EAElDC,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAC,CAAC,CAAC;MACVC,MAAM,EAAC;IACX,CAAC;EACH;EAEFC,MAAM,GAAG;IACP,MAAMC,OAAO,GAAG,CACd;MAAEC,KAAK,EAAE,IAAI;MAAEC,UAAU,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAC,EAC7C;MACEF,KAAK,EAAE,WAAW;MAClBC,UAAU,EAAE,YAAY;MACxBC,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,KAAK,EAAE,UAAU;MACjBC,UAAU,EAAE,WAAW;MACvBC,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,KAAK;MACjBG,IAAI,EAAE,QAAQ;MACdF,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEH,KAAK,EAAE,UAAU;MACjBC,UAAU,EAAE,WAAW;MACvBI,WAAW,EAAE,qDAAqD;MAClEC,QAAQ,EAAE,KAAK;MACfJ,KAAK,EAAE,GAAG;MACVK,WAAW,EAAGC,MAAM,IACjB,GAAEA,MAAM,CAACC,GAAG,CAACC,SAAS,IAAI,EAAG,IAAGF,MAAM,CAACC,GAAG,CAACE,QAAQ,IAAI,EAAG;IAC/D,CAAC,CACF;IAED,MAAMC,IAAI,GAAG,CACb;MAAEC,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,MAAM;MAAED,SAAS,EAAE,KAAK;MAAEI,GAAG,EAAE;IAAG,CAAC,EACtD;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,WAAW;MAAED,SAAS,EAAE,QAAQ;MAAEI,GAAG,EAAE;IAAG,CAAC,EAC9D;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,WAAW;MAAED,SAAS,EAAE,OAAO;MAAEI,GAAG,EAAE;IAAG,CAAC,EAC7D;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,OAAO;MAAED,SAAS,EAAE,MAAM;MAAEI,GAAG,EAAE;IAAG,CAAC,EACxD;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,WAAW;MAAED,SAAS,EAAE,UAAU;MAAEI,GAAG,EAAE;IAAK,CAAC,EAClE;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,YAAY;MAAED,SAAS,EAAE,IAAI;MAAEI,GAAG,EAAE;IAAI,CAAC,EAC5D;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,UAAU;MAAED,SAAS,EAAE,SAAS;MAAEI,GAAG,EAAE;IAAG,CAAC,EAC9D;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,SAAS;MAAED,SAAS,EAAE,SAAS;MAAEI,GAAG,EAAE;IAAG,CAAC,EAC7D;MAAED,EAAE,EAAE,CAAC;MAAEF,QAAQ,EAAE,OAAO;MAAED,SAAS,EAAE,QAAQ;MAAEI,GAAG,EAAE;IAAG,CAAC,CACzD;IAED,oBAEE,QAAC,GAAG;MAAC,SAAS,EAAC,SAAS;MAAA,uBACtB,QAAC,QAAQ;QACP,IAAI,EAAEF,IAAK;QACX,OAAO,EAAEb,OAAQ;QACjB,QAAQ,EAAE,CAAE;QACZ,kBAAkB,EAAE,CAAC,CAAC,CAAE;QACxB,iBAAiB;QACjB,uBAAuB;QACvB,oBAAoB,EAAE;UAAEgB,aAAa,EAAE;QAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAC9C;MAAA;MAAA;MAAA;IAAA,QACE;EAGV;EACAC,iBAAiB,GAAE;IACjBC,OAAO,CAAC,UAAU,CAAC,CACdC,IAAI,CAAEC,IAAI,IAAK;MACZ,IAAI,CAACC,QAAQ,CAAC;QACVxB,OAAO,EAACuB,IAAI;QACZtB,MAAM,EAAC,IAAI;QACXwB,OAAO,EAAC;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AAEA"},"metadata":{},"sourceType":"module"}